"""
Django settings for berdsk_news project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

from config import DJ_SCRT_KEY, DB_HOST, DB_PORT, DB_PASS, DB_NAME, DB_LOGIN

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = DJ_SCRT_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', "192.168.0.40", "212.20.45.230"]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    "news",

    "django.contrib.sites",
    "django.contrib.flatpages",
    "fpages",
    "django_filters"
]

SITE_ID = 1

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",

    "django.contrib.flatpages.middleware.FlatpageFallbackMiddleware",
]

ROOT_URLCONF = "berdsk_news.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, 'templates')],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "berdsk_news.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "sqlite3": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    },
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": DB_NAME,
        'USER': DB_LOGIN,
        'PASSWORD': DB_PASS,
        'HOST': DB_HOST,
        'PORT': DB_PORT,
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Novosibirsk"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

STATICFILES_DIRS = [BASE_DIR / "static"]

LOGGING = {'version': 1,
           'disable_existing_loggers': False,
           'style': '{',
           'formatters': {'all': {'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'},
                          'info': {'format': '%(asctime)s %(levelname)s %(module)s %(message)s'},
                          'security': {'format': '%(asctime)s %(levelname)s %(module)s %(message)s'},
                          'debug': {'format': '%(asctime)s %(levelname)s %(message)s'},
                          'warning': {'format': '%(asctime)s %(levelname)s %(message)s %(pathname)s'},
                          'error': {'format': '%(asctime)s %(levelname)s %(message)s %(pathname)s %(exc_info)s'},
                          'mail': {'format': '%(asctime)s %(levelname)s %(message)s %(pathname)s'},
                          'critical': {'format': '%(asctime)s %(levelname)s %(message)s %(pathname)s %(exc_info)s'}
                          },
           'filters': {'require_debug_true': {'()': 'django.utils.log.RequireDebugTrue'},
                       'require_debug_false': {'()': 'django.utils.log.RequireDebugFalse'},
                       },
           'handlers': {'INFO': {'level': 'INFO',
                                 'filters': ['require_debug_true'],
                                 'class': 'logging.StreamHandler',
                                 'formatter': 'all'
                                 },
                        'INFO_file': {'level': 'INFO',
                                      'filters': ['require_debug_true'],
                                      'class': 'logging.FileHandler',
                                      'filename': 'general.log',
                                      'formatter': 'all'
                                      },
                        'DEBUG': {'level': 'DEBUG',
                                  'filters': ['require_debug_true'],
                                  'class': 'logging.StreamHandler',
                                  'formatter': 'debug'
                                  },
                        'WARNING': {'level': 'WARNING',
                                    'filters': ['require_debug_true'],
                                    'class': 'logging.StreamHandler',
                                    'formatter': 'warning'
                                    },
                        'ERROR': {'level': 'ERROR',
                                  'filters': ['require_debug_true'],
                                  'class': 'logging.StreamHandler',
                                  'formatter': 'error'
                                  },
                        'ERROR_file': {'level': 'ERROR',
                                       'filters': ['require_debug_true'],
                                       'class': 'logging.FileHandler',
                                       'filename': 'error.log',
                                       'formatter': 'error'
                                       },
                        'CRITICAL': {'level': 'CRITICAL',
                                     'filters': ['require_debug_true'],
                                     'class': 'logging.StreamHandler',
                                     'formatter': 'critical'
                                     },
                        'CRITICAL_file': {'level': 'CRITICAL',
                                          'filters': ['require_debug_true'],
                                          'class': 'logging.FileHandler',
                                          'filename': 'error.log',
                                          'formatter': 'critical'
                                          },
                        'mail_admins': {'level': 'ERROR',
                                        'filters': ['require_debug_false'],
                                        'class': 'django.utils.log.AdminEmailHandler',
                                        'formatter': 'mail'
                                        },
                        'SEC_file': {'level': 'INFO',
                                     'filters': ['require_debug_true'],
                                     'class': 'logging.FileHandler',
                                     'filename': 'security.log',
                                     'formatter': 'security'
                                     },
                        },
           'loggers': {'django': {'handlers': ['INFO_file', 'DEBUG', 'ERROR', 'CRITICAL', 'WARNING'],
                                  'propagate': True,
                                  },
                       'django.request': {'handlers': ['mail_admins', 'ERROR_file', 'CRITICAL_file'],
                                          'level': 'ERROR',
                                          'propagate': True,
                                          },
                       'django.server': {'handlers': ['mail_admins', 'ERROR_file', 'CRITICAL_file']},
                       'django.template': {'handlers': ['ERROR_file', 'CRITICAL_file']},
                       'django.db.backends': {'handlers': ['ERROR_file', 'CRITICAL_file']},
                       'django.security': {'handlers': ['SEC_file']}
                       }
           }
